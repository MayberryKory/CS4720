Kory Mayberry
CS 4720 Design and Analysis of Algorithms
February 6th, 2024
Homework 1: Mergesort vs. Bubblesort

In running the algorithms on my computer, I was able to capture time data using python's time library. I set a starting
point and then ran the algorithm. Once the algorithm was complete it hit and end timer. I then subtracted the end time
from the start time to get the total running time for the algorithm. On the array of 100,000 unsorted elements, the
runtimes were as follows:

Bubble sort: 417037951625 ns (about 7 minutes total)
Merge sort: 367630167 ns (about 1/3 of a second)

If we apply the math of the known big O for each algorithm:

n = 100,000
O(n^2) = 10,000,000,000

O(nlog n) = 500,000

If we assign any arbitrary time to that number from the theoretical formulae, it still stands clear that merge sort is
several orders of magnitude faster when operating on a large data set.